{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-4536427"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"AzureSqlDatabase1\""
		},
		"ls_sa_ventas_csv_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_sa_ventas_csv\""
		},
		"ls_sql_db_ventas_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_sql_db_ventas\""
		},
		"ls_sql_dw_ventas_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_sql_dw_ventas\""
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-4536427676876.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw_ventas"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "franklin"
		},
		"ls_sql_db_ventas_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-4536427676876.database.windows.net"
		},
		"ls_sql_db_ventas_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db_ventas"
		},
		"ls_sql_db_ventas_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "franklin"
		},
		"ls_sql_dw_ventas_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-4536427676876.database.windows.net"
		},
		"ls_sql_dw_ventas_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw_ventas"
		},
		"ls_sql_dw_ventas_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "franklin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sa_ventas_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_sa_ventas_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_db_ventas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_db_ventas_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_db_ventas_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_db_ventas_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_db_ventas_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_dw_ventas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_dw_ventas_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_dw_ventas_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_dw_ventas_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_dw_ventas_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idCliente",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_cliente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_dw_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fecha",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_fecha"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_dw_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_pais')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "pais",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_pais"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_dw_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dim_producto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codInventario",
						"type": "varchar"
					},
					{
						"name": "descripcion",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_producto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_dw_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hechos_ventas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_venta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "noFactura",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "precioUnitario",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "total",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "fecha",
						"type": "date"
					},
					{
						"name": "codInventario",
						"type": "varchar"
					},
					{
						"name": "pais",
						"type": "varchar"
					},
					{
						"name": "idCliente",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "hechos_ventas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_dw_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tlb_ventas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_db_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DB"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NoFactura",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CodInventario",
						"type": "varchar"
					},
					{
						"name": "Descripcion",
						"type": "varchar"
					},
					{
						"name": "Cantidad",
						"type": "varchar"
					},
					{
						"name": "Fecha",
						"type": "varchar"
					},
					{
						"name": "PrecioUnitario",
						"type": "varchar"
					},
					{
						"name": "Total",
						"type": "varchar"
					},
					{
						"name": "IdCliente",
						"type": "varchar"
					},
					{
						"name": "Pais",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tbl_ventas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_db_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ventas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sa_ventas_csv",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ventas.csv",
						"container": "ventas"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "NoFactura",
						"type": "String"
					},
					{
						"name": "CodInventario",
						"type": "String"
					},
					{
						"name": "Descripcion",
						"type": "String"
					},
					{
						"name": "Cantidad",
						"type": "String"
					},
					{
						"name": "Fecha",
						"type": "String"
					},
					{
						"name": "PrecioUnitario",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "IdCliente",
						"type": "String"
					},
					{
						"name": "Pais",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sa_ventas_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_producto",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codInventario as string,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'Select distinct UPPER(CodInventario) as codInventario, Descripcion from [dbo].[tbl_ventas]',",
						"     format: 'query') ~> source1",
						"source1 sort(asc(codInventario, true)) ~> sort1",
						"sort1 aggregate(groupBy(codInventario),",
						"     each(match(name!='codInventario'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          codInventario as string,",
						"          descripcion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          codInventario,",
						"          descripcion = Descripcion",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_hechos_ventas_v1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_hechos_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          NoFactura as integer,",
						"          CodInventario as string,",
						"          Pais as string,",
						"          Fecha as string,",
						"          IdCliente as string,",
						"          Cantidad as string,",
						"          precioUnitario as string,",
						"          total as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'Select NoFactura\\n  ,CodInventario\\n  ,Pais\\n  ,Fecha\\n  ,IdCliente\\n  ,Cantidad\\n  ,replace(PrecioUnitario,\\',\\',\\'.\\') as precioUnitario\\n  ,replace(Total,\\',\\',\\'.\\') as total\\n  from [dbo].[tbl_ventas]',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          NoFactura as integer,",
						"          Fecha as date,",
						"          IdCliente as integer,",
						"          Cantidad as integer,",
						"          precioUnitario as decimal(10,2),",
						"          total as decimal(10,2)",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_venta as integer,",
						"          noFactura as integer,",
						"          cantidad as integer,",
						"          precioUnitario as decimal(9,2),",
						"          total as decimal(9,2),",
						"          fecha as date,",
						"          codInventario as string,",
						"          pais as string,",
						"          idCliente as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          noFactura = NoFactura,",
						"          cantidad = Cantidad,",
						"          precioUnitario,",
						"          total,",
						"          fecha = Fecha,",
						"          codInventario = CodInventario,",
						"          pais = Pais,",
						"          idCliente = IdCliente",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]",
				"[concat(variables('factoryId'), '/datasets/ds_hechos_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_db_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ventas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          NoFactura as integer,",
						"          CodInventario as string,",
						"          Descripcion as string,",
						"          Cantidad as string,",
						"          Fecha as string,",
						"          PrecioUnitario as string,",
						"          Total as string,",
						"          IdCliente as string,",
						"          Pais as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          NoFactura as integer,",
						"          CodInventario as string,",
						"          Descripcion as string,",
						"          Cantidad as string,",
						"          Fecha as string,",
						"          PrecioUnitario as string,",
						"          Total as string,",
						"          IdCliente as string,",
						"          Pais as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          NoFactura,",
						"          CodInventario,",
						"          Descripcion,",
						"          Cantidad,",
						"          Fecha,",
						"          PrecioUnitario,",
						"          Total,",
						"          IdCliente,",
						"          Pais",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ventas_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_dim_cliente')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_cliente",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          IdCliente as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'Select distinct IdCliente from [dbo].[tbl_ventas]',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          IdCliente as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sort(asc(IdCliente, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          idCliente as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          idCliente = IdCliente",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_dim_pais')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_pais",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Pais as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'Select distinct Pais from [dbo].[tbl_ventas]',",
						"     format: 'query') ~> source1",
						"source1 sort(asc(Pais, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          pais as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          pais = Pais",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_pais')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_fecha')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_tlb_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'Select distinct fecha from [dbo].[tbl_ventas]',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          fecha as date",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sort(asc(fecha, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          fecha as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tlb_ventas')]",
				"[concat(variables('factoryId'), '/datasets/ds_dim_fecha')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_ventas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dw_dim_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dw_dim_pais",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dw_fecha",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow4",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow5",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_hechos_ventas_v1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dw_dim_cliente')]",
				"[concat(variables('factoryId'), '/dataflows/dw_dim_pais')]",
				"[concat(variables('factoryId'), '/dataflows/dw_fecha')]",
				"[concat(variables('factoryId'), '/dataflows/df_dim_producto')]",
				"[concat(variables('factoryId'), '/dataflows/df_hechos_ventas_v1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_db_ventas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Proceso",
								"value": "CargaDiaria"
							},
							{
								"name": "Fuente",
								"value": "SQLServer"
							},
							{
								"name": "Destino",
								"value": "dbo.dim_producto"
							},
							{
								"name": "VersionDatos",
								"value": "v1.2"
							}
						],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_db_ventas",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2025-04-08T23:30:00",
						"timeZone": "SA Western Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_db_ventas')]"
			]
		}
	]
}